{"ast":null,"code":"import _classCallCheck from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react'; //import NotefulForm from '../NotefulForm/NotefulForm'\n\nimport './AddNote.css';\nimport NoteErrorBoundries from './NoteErrorBoundries';\nimport propTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport API_KEY from '../config';\n\nvar AddNote = /*#__PURE__*/function (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n    _this.state = {\n      name: '',\n      content: '',\n      selectedFolder: ''\n    };\n    _this.handleNameChange = _this.handleNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleContentChange = _this.handleContentChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.backToHome = this.backToHome.bind(this)\n    //this.submitAndGoHome = this.submitAndGoHome.bind(this)\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"handleNameChange\",\n    value: function handleNameChange(e) {\n      this.setState({\n        name: e.target.value\n      });\n    }\n  }, {\n    key: \"handleContentChange\",\n    value: function handleContentChange(e) {\n      this.setState({\n        content: e.target.value\n      });\n    }\n  }, {\n    key: \"onFolderSelect\",\n    value: function onFolderSelect(e) {\n      this.setState({\n        selectedFolder: e.target.value\n      });\n    } // backToHome(e){\n    // this.props.history.push('/')\n    //}\n\n  }, {\n    key: \"newAddedNote\",\n    value: function newAddedNote(newNote) {\n      var _this2 = this;\n\n      var notesUrl = 'https://noteful-repo.now.sh';\n      var params = {\n        method: 'POST',\n        headers: {\n          'Authorization': API_KEY,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      };\n      fetch(notesUrl, params).then(function (response) {\n        if (!response.ok) {\n          throw new Error('Something went wrong, try again later');\n        }\n\n        return response.json();\n      }).then(function (data) {\n        _this2.props.updateNotes(data); // lets call this function\n\n      }).catch(function (error) {\n        alert('Something went wrong. Try again later');\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault(); //console.log(this.props.folders)\n\n      var nameValue = this.state.name;\n      var contentValue = this.state.content;\n      var time = new Date();\n      var folderIdValue = this.state.selectedFolder;\n      console.log(folderIdValue);\n      var testing = {\n        nameValue: nameValue,\n        contentValue: contentValue,\n        time: time,\n        folderIdValue: folderIdValue\n      };\n      console.log('this is the title of the note: ' + nameValue + ' , and its contents are as follows: ' + contentValue + ' , and the time is: ' + time + ' , and the folder id is: ' + folderIdValue);\n      var testingTwo = {\n        \"folderId\": testing.folderIdValue,\n        \"name\": testing.nameValue,\n        \"modified\": testing.time,\n        \"content\": testing.contentValue\n      };\n\n      if (folderIdValue === '') {\n        alert('please select a folder');\n      } else this.newAddedNote(testingTwo);\n    } //submitAndGoHome(e){\n    //  this.handleSubmit(e)\n    //  this.backToHome(e)\n    //}\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var folders = this.props.folders;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"AddNote\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, \"Create a note\"), /*#__PURE__*/React.createElement(NoteErrorBoundries, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this3.handleSubmit(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"note-name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"note-name-input\",\n        name: this.state.name,\n        onChange: function onChange(e) {\n          return _this3.handleNameChange(e);\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"note-content-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, \"Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"note-content-input\",\n        content: this.state.content,\n        onChange: function onChange(e) {\n          return _this3.handleContentChange(e);\n        },\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"note-folder-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"Folder\"), /*#__PURE__*/React.createElement(\"select\", {\n        required: true,\n        id: \"note-folder-select\",\n        onChange: function onChange(e) {\n          return _this3.onFolderSelect(e);\n        },\n        selectedFolder: this.state.selectedFolder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, \"...\"), folders.map(function (folder) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }\n        }, folder.name);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, \"Add note\")))));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.defaultProps = {\n  folders: []\n};\nexport { AddNote as default };\nAddNote.propTypes = {\n  nameValue: propTypes.string,\n  contentValue: propTypes.string,\n  folderIdValue: propTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/src/AddNote/AddNote.js"],"names":["React","Component","NoteErrorBoundries","propTypes","withRouter","API_KEY","AddNote","props","state","name","content","selectedFolder","handleNameChange","bind","handleContentChange","handleSubmit","e","setState","target","value","newNote","notesUrl","params","method","headers","body","JSON","stringify","fetch","then","response","ok","Error","json","data","updateNotes","catch","error","alert","preventDefault","nameValue","contentValue","time","Date","folderIdValue","console","log","testing","testingTwo","newAddedNote","folders","onFolderSelect","map","folder","id","defaultProps","string","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n//import NotefulForm from '../NotefulForm/NotefulForm'\nimport './AddNote.css'\nimport NoteErrorBoundries from './NoteErrorBoundries';\nimport propTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom';\nimport API_KEY from '../config'\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    folders: [],\n  }\n  constructor(props){\n    super(props);\n    this.state = {\n      name: '',\n      content: '',\n      selectedFolder: ''\n    };\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handleContentChange = this.handleContentChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    //this.backToHome = this.backToHome.bind(this)\n    //this.submitAndGoHome = this.submitAndGoHome.bind(this)\n  }\n  handleNameChange(e){\n    this.setState({\n      name: e.target.value,\n    })\n  }\n  handleContentChange(e){\n    this.setState({\n      content: e.target.value\n    })\n  }\n  onFolderSelect(e){\n    this.setState({\n      selectedFolder: e.target.value\n    })\n  }\n\n // backToHome(e){\n   // this.props.history.push('/')\n  //}\n\n  newAddedNote(newNote) {\n    const notesUrl = 'https://noteful-repo.now.sh';\n    const params = {\n      method: 'POST',\n      headers: {\n        'Authorization': API_KEY,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newNote)\n    }\n    fetch(notesUrl, params)\n    .then(response => {\n      if(!response.ok){\n        throw new Error('Something went wrong, try again later')\n      }\n      return (response.json());\n    })\n    .then(data => {\n        this.props.updateNotes(data) // lets call this function\n    })\n    .catch(error => {\n      alert('Something went wrong. Try again later')\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    //console.log(this.props.folders)\n    const nameValue = this.state.name\n    const contentValue = this.state.content\n    const time = new Date()\n    const folderIdValue = this.state.selectedFolder\n    console.log(folderIdValue);\n    const testing = {nameValue, contentValue, time, folderIdValue}\n    console.log('this is the title of the note: ' + nameValue + \n    ' , and its contents are as follows: ' + contentValue + \n    ' , and the time is: ' + time + \n    ' , and the folder id is: ' + folderIdValue);\n    const testingTwo = {\n      \"folderId\": testing.folderIdValue,\n      \"name\": testing.nameValue,\n      \"modified\": testing.time,\n      \"content\": testing.contentValue\n    }\n    if (folderIdValue === ''){\n      alert('please select a folder' )\n    } else (\n      this.newAddedNote(testingTwo)\n    )\n    \n  }\n\n  //submitAndGoHome(e){\n  //  this.handleSubmit(e)\n  //  this.backToHome(e)\n  //}\n\n\n  render() {\n    const { folders } = this.props\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        {/*<NotefulForm>*/}\n        <NoteErrorBoundries>\n          <form onSubmit = {e => this.handleSubmit(e)}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='note-name-input' name={this.state.name} onChange = {e => this.handleNameChange(e)} required/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea id='note-content-input' content={this.state.content} onChange = {e => this.handleContentChange(e)} required/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select required id='note-folder-select' onChange = {e => this.onFolderSelect(e)} selectedFolder={this.state.selectedFolder}>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit'>\n                Add note\n              </button>\n            </div>\n          </form>\n        </NoteErrorBoundries>\n\n      {/*</NotefulForm>*/}\n      </section>\n          \n    )\n  }\n}\n\nAddNote.propTypes = {\n  nameValue: propTypes.string,\n  contentValue: propTypes.string,\n  folderIdValue: propTypes.number.isRequired\n}"]},"metadata":{},"sourceType":"module"}