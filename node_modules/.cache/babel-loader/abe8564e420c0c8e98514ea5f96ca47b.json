{"ast":null,"code":"import _toConsumableArray from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport API_KEY from '../config';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); //this.newAddedFolder = this.newAddedFolder.bind(this)\n    //this.newAddedNote = this.newAddedNote.bind(this)\n\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.updateFolders = function (newFolders) {\n      var foldersClone = JSON.parse(JSON.stringify(_this.state.folders));\n      foldersClone.push(newFolders);\n\n      _this.setState({\n        folders: foldersClone\n      }, function () {\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.handleAddNote = function (newNote) {\n      _this.setState({\n        'id': '',\n        'name': '',\n        'folder': '',\n        'content': ''\n      });\n    };\n\n    _this.updateNotes = function (newNote) {\n      var notesClone = JSON.parse(JSON.stringify(_this.state.notes));\n      notesClone.push(newNote);\n\n      _this.setState({\n        notes: notesClone\n      }, function () {\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.updateFolders = _this.updateFolders.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateNotes = _this.updateNotes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(process.env.REACT_APP_API_FOLDERS_ENDPOINT).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var getFolders = data;\n\n        _this2.setState({\n          folders: getFolders\n        });\n      }).catch(function (error) {\n        console.log('idk whats up with the folders, try again later #catch');\n      });\n      fetch(process.env.REACT_APP_API_NOTES_ENDPOINT).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var getNotes = data;\n\n        _this2.setState({\n          notes: getNotes\n        });\n      }).catch(function (error) {\n        console.log('idk whats up with the notes, try again later #catch');\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"newAddedNote\",\n    value: function newAddedNote(newNote) {\n      var _this3 = this;\n\n      var notesUrl = process.env.REACT_APP_API_NOTES_ENDPOINT;\n      var params = {\n        method: 'POST',\n        headers: {\n          'Authorization': process.env.REACT_APP_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newNote)\n      };\n      fetch(notesUrl, params).then(function (response) {\n        if (!response.ok) {\n          throw new Error('Something went wrong, try again later');\n        }\n\n        return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          note: [].concat(_toConsumableArray(_this3.state.notes), [data])\n        });\n      }).then(function (e) {\n        _this3.props.history.push('/add');\n      }).catch(function (error) {\n        alert('Something went wrong. Try again later');\n      });\n    }\n  }, {\n    key: \"newAddedFolder\",\n    value: function newAddedFolder(newFolder) {\n      var _this4 = this;\n\n      var folderUrl = process.env.REACT_APP_API_FOLDERS_ENDPOINT;\n      var params = {\n        method: 'POST',\n        headers: {\n          'Authorization': process.env.REACT_APP_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newFolder)\n      };\n      fetch(folderUrl, params).then(function (response) {\n        if (!response.ok) {\n          throw new Error('Something went wrong, try again later');\n        }\n\n        return response.json();\n      }).then(function (data) {\n        _this4.props.updateFolders(data);\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      var _this5 = this;\n\n      var _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            return /*#__PURE__*/React.createElement(NoteListNav, Object.assign({\n              folders: folders,\n              notes: notes\n            }, routeProps, {\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }\n            }));\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId) || {};\n          var folder = findFolder(folders, note.folderId);\n          return /*#__PURE__*/React.createElement(NotePageNav, Object.assign({}, routeProps, {\n            folder: folder,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      var _this6 = this;\n\n      var _this$state2 = this.state,\n          notes = _this$state2.notes,\n          folders = _this$state2.folders;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            var folderId = routeProps.match.params.folderId;\n            var notesForFolder = getNotesForFolder(notes, folderId);\n            return /*#__PURE__*/React.createElement(NoteListMain, Object.assign({}, routeProps, {\n              notes: notesForFolder,\n              __self: _this6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }\n            }));\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId);\n          return /*#__PURE__*/React.createElement(NotePageMain, Object.assign({}, routeProps, {\n            note: note,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-folder\",\n        render: function render(routeProps) {\n          return /*#__PURE__*/React.createElement(AddFolder, Object.assign({\n            updateFolders: _this6.updateFolders,\n            getRequest: _this6.getRequest,\n            newAddedNote: _this6.newAddedFolder\n          }, routeProps, {\n            folders: folders,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-note\",\n        render: function render(routeProps) {\n          return /*#__PURE__*/React.createElement(AddNote, Object.assign({\n            updateNotes: _this6.updateNotes,\n            getRequest: _this6.getRequest,\n            newAddedNote: _this6.newAddedNote\n          }, routeProps, {\n            folders: folders,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, this.renderNavRoutes()), /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, \"Noteful\"), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"main\", {\n        className: \"App__main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      }, this.renderMainRoutes()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/CRA/Documents/coder/Student-Projects/noteful-final/noteful-repo/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","getNotesForFolder","findNote","findFolder","withRouter","API_KEY","App","props","state","notes","folders","updateFolders","newFolders","foldersClone","JSON","parse","stringify","push","setState","history","handleAddNote","newNote","updateNotes","notesClone","bind","fetch","process","env","REACT_APP_API_FOLDERS_ENDPOINT","then","response","json","data","getFolders","catch","error","console","log","REACT_APP_API_NOTES_ENDPOINT","getNotes","notesUrl","params","method","headers","REACT_APP_API_KEY","body","ok","Error","note","e","alert","newFolder","folderUrl","map","path","routeProps","noteId","match","folder","folderId","notesForFolder","getRequest","newAddedFolder","newAddedNote","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers'\nimport './App.css'\nimport {withRouter} from 'react-router-dom';\nimport API_KEY from '../config';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    \n    //this.newAddedFolder = this.newAddedFolder.bind(this)\n    //this.newAddedNote = this.newAddedNote.bind(this)\n    this.updateFolders = this.updateFolders.bind(this)\n    this.updateNotes = this.updateNotes.bind(this)\n\n}\nstate = {\n      notes: [],\n      folders: [],\n    }\n\n  componentDidMount(){\n    fetch(process.env.REACT_APP_API_FOLDERS_ENDPOINT)\n      .then(response => response.json())\n      .then(data =>{ \n        const getFolders = data\n        this.setState({\n          folders: getFolders\n        })\n      })\n      .catch(error => {\n        console.log('idk whats up with the folders, try again later #catch')\n      })\n      fetch(process.env.REACT_APP_API_NOTES_ENDPOINT)\n      .then(response => response.json())\n      .then(data => {\n        const getNotes = data\n        this.setState({\n          notes: getNotes\n        })\n      })\n      .catch(error => {\n        console.log('idk whats up with the notes, try again later #catch')\n        console.log(error)\n      })\n  }\n\n  newAddedNote(newNote) {\n    const notesUrl = process.env.REACT_APP_API_NOTES_ENDPOINT\n    const params = {\n      method: 'POST',\n      headers: {\n        'Authorization': process.env.REACT_APP_API_KEY,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newNote)\n    }\n    fetch(notesUrl, params)\n    .then(response => {\n      if(!response.ok){\n        throw new Error('Something went wrong, try again later')\n      }\n      return (response.json());\n    })\n    .then(data => {\n      this.setState({note: [...this.state.notes, data]});\n    })\n    .then(e => {\n        this.props.history.push('/add')\n    })\n    .catch(error => {\n      alert('Something went wrong. Try again later')\n    })\n  } \n\n  newAddedFolder(newFolder) {\n    const folderUrl = process.env.REACT_APP_API_FOLDERS_ENDPOINT\n      const params = {\n        method: 'POST',\n        headers: {\n          'Authorization': process.env.REACT_APP_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newFolder)\n      }\n      fetch(folderUrl, params)\n      .then(response =>{\n        if (!response.ok){\n          throw new Error('Something went wrong, try again later')\n        }\n        return (response.json())\n      })\n      .then(data => {\n        this.props.updateFolders(data)\n      })\n  }\n  updateFolders = (newFolders) => {\n    let foldersClone  = JSON.parse(JSON.stringify(this.state.folders))\n    foldersClone.push(newFolders)\n    this.setState({\n      folders: foldersClone\n    }, () => {\n      this.props.history.push('/')\n    })\n  }\n\n  handleAddNote = (newNote) => {\n    this.setState({\n      'id': '',\n      'name': '',\n      'folder': '',\n      'content': ''\n    })\n  }\n\n  updateNotes = (newNote) => {\n    let notesClone = JSON.parse(JSON.stringify(this.state.notes))\n    notesClone.push(newNote) \n    this.setState({\n         notes: notesClone\n    }, () => {\n        this.props.history.push('/')\n    })\n}\n\n  renderNavRoutes() {\n    const { notes, folders } = this.state\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps =>\n              <NoteListNav\n                folders={folders}\n                notes={notes}\n                {...routeProps}\n              />\n            }\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params\n            const note = findNote(notes, noteId) || {}\n            const folder = findFolder(folders, note.folderId)\n            return (\n              <NotePageNav\n                {...routeProps}\n                folder={folder}\n              />\n            )\n          }}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    const { notes, folders } = this.state\n    return(\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const { folderId } = routeProps.match.params\n              const notesForFolder = getNotesForFolder(notes, folderId)\n              return (\n                <NoteListMain\n                  {...routeProps}\n                  notes={notesForFolder}\n                />\n              )\n            }}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params\n            const note = findNote(notes, noteId)\n            return (\n              <NotePageMain\n                {...routeProps}\n                note={note}\n              />\n            )\n          }}\n        />\n        <Route\n          path='/add-folder'\n          render =  {routeProps => {\n            return(\n              <AddFolder updateFolders = {this.updateFolders}\n                  getRequest= {this.getRequest}\n                  newAddedNote = {this.newAddedFolder}\n                  {...routeProps}\n                  folders = {folders}\n                 />\n            )\n            \n          }     \n           }\n          />\n        <Route\n          path='/add-note'\n          render={routeProps => {\n            return (\n              <AddNote \n                updateNotes = {this.updateNotes } \n                getRequest = {this.getRequest} \n                newAddedNote = {this.newAddedNote}\n                {...routeProps}\n                folders={folders}\n              />\n            )\n          }}\n        />\n      </>\n    )}\n  render() {\n    return (\n      <div className='App'>\n        <nav className='App__nav'>\n          {this.renderNavRoutes()}\n        </nav>\n        <header className='App__header'>\n          <h1>\n            <Link to='/'>Noteful</Link>\n            {' '}\n            <FontAwesomeIcon icon='check-double' />\n          </h1>\n        </header>\n        <main className='App__main'>\n          {this.renderMainRoutes()}\n        </main>\n      </div>\n    )\n  }\n}\nexport default withRouter(App)"]},"metadata":{},"sourceType":"module"}